name: Deploy Stack (Demo)

on:
  workflow_dispatch:
    inputs:
      action:
        type: choice
        description: 'Action to perform (plan/apply/destroy)'
        options:
          - plan
          - apply
          - destroy
      stack:
        type: choice
        description: 'Stack'
        options:
          - 'common/networking'


      region:
        type: choice
        description: 'Region'
        options:
          - 'eu-west-1'
          - 'us-east-1'

env:
  tf_version: 'v1.6.6'
  tg_version: '0.54.7'
  environment: 'demo'
  #gh_env: 'Demo'
  region: 'eu-west-1'
  base_dir: 'non-prod'
  aws_role: 'arn:aws:iam::966412459053:role/CCAwsInfraDemoGithubAction'
  #TF_LOG: 'DEBUG'

jobs:
  checks:
    runs-on: ubuntu-24.04
    permissions:
      id-token: write
      contents: read
    steps:
      - name: 'Checkout'
        uses: actions/checkout@main

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.aws_role }}
          aws-region: ${{ env.region }}

      - name: Check terragrunt HCL
        uses: gruntwork-io/terragrunt-action@v2
        with:
          tf_version: ${{ env.tf_version }}
          tg_version: ${{ env.tg_version }}
          tg_dir: ${{ env.base_dir }}/${{ github.event.inputs.region }}/${{ env.environment }}/${{ github.event.inputs.stack }}
          tg_command: 'hclfmt --terragrunt-check --terragrunt-diff'

      - name: Terragrunt Validate
        uses: gruntwork-io/terragrunt-action@v2
        with:
          tf_version: ${{ env.tf_version }}
          tg_version: ${{ env.tg_version }}
          tg_dir: ${{ env.base_dir }}/${{ github.event.inputs.region }}/${{ env.environment }}/${{ github.event.inputs.stack }}
          tg_command: 'validate'


  plan:
    # if: ${{ github.event.inputs.action == 'plan' || github.event.inputs.action == 'apply' || github.event.inputs.action == 'destroy' }}
    if: ${{ github.event.inputs.action == 'plan' || github.event.inputs.action == 'destroy' }}
    runs-on: ubuntu-24.04
    permissions:
      id-token: write
      contents: read
    needs: [ checks ]
    steps:
      - name: 'Checkout'
        uses: actions/checkout@main

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::966412459053:role/CCAwsInfraDemoGithubAction
          aws-region: eu-west-1

      - name: Plan (run-all plan)
        uses: gruntwork-io/terragrunt-action@v2
        with:
          tf_version: ${{ env.tf_version }}
          tg_version: ${{ env.tg_version }}
          tg_dir: ${{ env.base_dir }}/${{ github.event.inputs.region }}/${{ env.environment }}/${{ github.event.inputs.stack }}
          tg_command: 'run-all plan'

  apply:
    if: ${{ github.event.inputs.action == 'apply' }}
    runs-on: ubuntu-24.04
    #environment: Demo
    permissions:
      id-token: write
      contents: read
    # needs: [ plan ]
    needs: [ checks ]
    steps:
      - name: 'Checkout'
        uses: actions/checkout@main

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::966412459053:role/CCAwsInfraDemoGithubAction
          aws-region: eu-west-1

      - name: Apply
        uses: gruntwork-io/terragrunt-action@v2
        with:
          tf_version: ${{ env.tf_version }}
          tg_version: ${{ env.tg_version }}
          tg_dir: ${{ env.base_dir }}/${{ github.event.inputs.region }}/${{ env.environment }}/${{ github.event.inputs.stack }}
          tg_command: 'run-all apply -auto-approve'

      - name: Annotate Pipeline
        run: echo "::notice ::Stack --> ${{ env.base_dir }}/${{ github.event.inputs.region }}/${{ env.environment }}/${{ github.event.inputs.stack }}"


  destroy:
    if: ${{ github.event.inputs.action == 'destroy' }}
    runs-on: ubuntu-24.04
    #environment: Demo
    permissions:
      id-token: write
      contents: read
    needs: [ plan ]
    steps:
      - name: 'Checkout'
        uses: actions/checkout@main

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::966412459053:role/CCAwsInfraDemoGithubAction
          aws-region: eu-west-1

      - name: Destroy
        uses: gruntwork-io/terragrunt-action@v2
        with:
          tf_version: ${{ env.tf_version }}
          tg_version: ${{ env.tg_version }}
          tg_dir: ${{ env.base_dir }}/${{ github.event.inputs.region }}/${{ env.environment }}/${{ github.event.inputs.stack }}
          tg_command: 'run-all destroy -auto-approve'

      - name: Annotate Pipeline
        run: echo "::notice ::Stack --> ${{ env.base_dir }}/${{ github.event.inputs.region }}/${{ env.environment }}/${{ github.event.inputs.stack }}"

